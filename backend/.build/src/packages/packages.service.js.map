{
  "version": 3,
  "sources": ["../../../src/packages/packages.service.ts"],
  "sourcesContent": ["import {\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { PackagesModel } from './packages.interface';\n\n@Injectable()\nexport class PackagesService {\n  private packages: Array<PackagesModel> = [];\n\n  public findAll(): Array<PackagesModel> {\n    return this.packages;\n  }\n\n  public findOne(id: number): PackagesModel {\n    const pack: PackagesModel = this.packages.find((pack) => pack.id === id);\n    if (!pack) {\n      throw new NotFoundException('Package not found.');\n    }\n    return pack;\n  }\n\n  public create(pack: PackagesModel) {\n    const packgExists: boolean = this.packages.some(\n      (packgIterated) => packgIterated.id === pack.id,\n    );\n    if (packgExists) {\n      throw new UnprocessableEntityException('Package already exists');\n    }\n    const maxId: number = Math.max(...this.packages.map((packg) => packg.id));\n    const id: number = maxId + 1;\n\n    const packgPost: PackagesModel = {\n      ...pack,\n      id: id,\n    };\n    this.packages.push(packgPost);\n    return packgPost;\n  }\n\n  public delete(id: number): void {\n    const index: number = this.packages.findIndex((packg) => packg.id === id);\n    if (index === -1) {\n      throw new NotFoundException('Package not found');\n    }\n    this.packages.splice(index, 1);\n  }\n\n  public update(id: number, packg: PackagesModel): PackagesModel {\n    const index: number = this.packages.findIndex((packg) => packg.id === id);\n\n    if (index === -1) {\n      throw new NotFoundException('Package not found');\n    }\n\n    const packageExists: boolean = this.packages.some(\n      (packgIterated) =>\n        packgIterated.id === packg.id &&\n        packgIterated.userId === packg.userId &&\n        packgIterated.receivementDate === packg.receivementDate &&\n        packgIterated.retrievalDate === packg.retrievalDate,\n    );\n    if (packageExists) {\n      throw new UnprocessableEntityException('this package already exists');\n    }\n\n    const packgPost: PackagesModel = {\n      ...packg,\n    };\n\n    this.packages[index] = packgPost;\n    return packgPost;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,oBAIO;AAIA,4BAAsB;AAAA,EAAtB,cARP;AASU,oBAAiC;AAAA;AAAA,EAElC,UAAgC;AACrC,WAAO,KAAK;AAAA;AAAA,EAGP,QAAQ,IAA2B;AACxC,UAAM,OAAsB,KAAK,SAAS,KAAK,CAAC,UAAS,MAAK,OAAO;AACrE,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,gCAAkB;AAAA;AAE9B,WAAO;AAAA;AAAA,EAGF,OAAO,MAAqB;AACjC,UAAM,cAAuB,KAAK,SAAS,KACzC,CAAC,kBAAkB,cAAc,OAAO,KAAK;AAE/C,QAAI,aAAa;AACf,YAAM,IAAI,2CAA6B;AAAA;AAEzC,UAAM,QAAgB,KAAK,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,UAAU,MAAM;AACrE,UAAM,KAAa,QAAQ;AAE3B,UAAM,YAA2B,iCAC5B,OAD4B;AAAA,MAE/B;AAAA;AAEF,SAAK,SAAS,KAAK;AACnB,WAAO;AAAA;AAAA,EAGF,OAAO,IAAkB;AAC9B,UAAM,QAAgB,KAAK,SAAS,UAAU,CAAC,UAAU,MAAM,OAAO;AACtE,QAAI,UAAU,IAAI;AAChB,YAAM,IAAI,gCAAkB;AAAA;AAE9B,SAAK,SAAS,OAAO,OAAO;AAAA;AAAA,EAGvB,OAAO,IAAY,OAAqC;AAC7D,UAAM,QAAgB,KAAK,SAAS,UAAU,CAAC,WAAU,OAAM,OAAO;AAEtE,QAAI,UAAU,IAAI;AAChB,YAAM,IAAI,gCAAkB;AAAA;AAG9B,UAAM,gBAAyB,KAAK,SAAS,KAC3C,CAAC,kBACC,cAAc,OAAO,MAAM,MAC3B,cAAc,WAAW,MAAM,UAC/B,cAAc,oBAAoB,MAAM,mBACxC,cAAc,kBAAkB,MAAM;AAE1C,QAAI,eAAe;AACjB,YAAM,IAAI,2CAA6B;AAAA;AAGzC,UAAM,YAA2B,mBAC5B;AAGL,SAAK,SAAS,SAAS;AACvB,WAAO;AAAA;AAAA;AAhEJ;AAAA,EADN;AAAA,GACM;",
  "names": []
}
